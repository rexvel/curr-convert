{"version":3,"sources":["routes.js","actions/index.js","reducers/feth.js","reducers/currencies.js","reducers/convert.js","consts.js","reducers/index.js","selectors/index.js","components/CurrencyInput/CurrencyList.jsx","components/CurrencyInput/CurrencyDropdown.jsx","utils/index.js","components/CurrencyInput/index.jsx","components/CurrencySecond.jsx","components/CurrencyFirst.jsx","components/ConvertWidget.jsx","components/App.jsx","index.js"],"names":["host","process","authorization","baseURL","method","url","headers","from","to","amount","join","fetchCurrenciesRequest","createAction","fetchCurrenciesSuccess","fetchCurrenciesFailure","fetchConvertedRequest","fetchConvertedSuccess","fetchConvertedFailure","setBaseCurrency","setQuoteCurrency","setFirstAmount","setSecondAmount","switchInputs","fetchConverted","dispach","a","async","convertUrl","routes","axios","request","rate","data","fetchCurrenciesState","handleActions","actions","fetchConvertState","state","payload","byCode","keyBy","currencies","allCodes","map","currensy","code","defaultState","mode","base","quote","firstAmount","secondAmount","oppositeRate","mapping","first","floor","second","value","combineReducers","convert","currencySelector","createSelector","CurrencyList","this","props","onChange","currency","Dropdown","Item","active","onClick","key","text","name","description","style","whiteSpace","React","Component","connect","CurrencyDropdown","currentValue","handleUpdate","e","setState","onOpen","button","scrolling","position","Menu","mask","replace","CurrencyInput","handleChange","event","onAmountChange","newValue","onCurrencyChange","Input","fluid","maxLength","placeholder","action","actionsList","CurrencySecond","handleClick","CurrencyFirst","ConvertWidget","Message","negative","Header","isFetching","Segment","loading","Grid","columns","stackable","Column","width","Divider","vertical","Icon","link","renderErrMsg","renderWidget","App","Container","height","textAlign","verticalAlign","as","color","href","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","dispatch","listUrl","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c38daf99.chunk.js","sourcesContent":["const host = process.env.REACT_APP_HOST;\r\nconst key = process.env.REACT_APP_API_KEY;\r\nconst authorization = `Bearer ${key}`;\r\n\r\n\r\nexport default {\r\n  listUrl: () => ({\r\n    baseURL: host,\r\n    method: 'get',\r\n    url: 'list',\r\n    headers: {\r\n      authorization,\r\n    },\r\n  }),\r\n  ratesUrl: (params) => ({\r\n    baseURL: host,\r\n    method: 'get',\r\n    url: 'rates',\r\n    headers: {\r\n      authorization,\r\n    },\r\n    params,\r\n  }),\r\n  convertUrl: (from, to, amount = 1) => ({\r\n    baseURL: host,\r\n    method: 'get',\r\n    url: ['convert', amount, from, to].join('/'),\r\n    headers: {\r\n      authorization,\r\n    },\r\n  }),\r\n};\r\n","import axios from 'axios';\r\nimport { createAction } from 'redux-actions';\r\nimport { INIT_BASE, INIT_QUOTE } from '../consts';\r\nimport routes from '../routes';\r\n\r\nexport const fetchCurrenciesRequest = createAction('FETCH_CURRENCIES_REQUEST');\r\nexport const fetchCurrenciesSuccess = createAction('FETCH_CURRENCIES_SUCCESS');\r\nexport const fetchCurrenciesFailure = createAction('FETCH_CURRENCIES_FAILURE');\r\n\r\nexport const fetchConvertedRequest = createAction('FETCH_CONVERTED_REQUEST');\r\nexport const fetchConvertedSuccess = createAction('FETCH_CONVERTED_SUCCESS');\r\nexport const fetchConvertedFailure = createAction('FETCH_CONVERTED_FAILURE');\r\n\r\nexport const setBaseCurrency = createAction('SET_BASE_CURRENCY');\r\nexport const setQuoteCurrency = createAction('SET_QUOTE_CURRENCY');\r\n\r\nexport const setFirstAmount = createAction('SET_FIRST_AMOUNT');\r\nexport const setSecondAmount = createAction('SET_SECOND_AMOUNT');\r\n\r\nexport const switchInputs = createAction('SWITCH_INPUTS');\r\n\r\nexport const fetchConverted = (from, to) => async (dispach) => {\r\n  dispach(fetchConvertedRequest());\r\n  try {\r\n    const convertUrl = routes.convertUrl(from, to);\r\n    const { data: { amount: rate } } = await axios.request(convertUrl);\r\n    // TODO:\r\n    // Как оказалось, сервер может ответить значением amount: 0.\r\n    // Стоит добавить проверку на ноль и наверное, кидать исключение,\r\n    // пока не придкмал как с этим быть.\r\n    dispach(fetchConvertedSuccess({ rate }));\r\n  } catch (err) {\r\n    dispach(fetchConvertedFailure());\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const fetchCurrencies = () => async (dispach) => {\r\n  dispach(fetchCurrenciesRequest());\r\n  try {\r\n    const listUrl = routes.listUrl();\r\n    const response = await axios.request(listUrl);\r\n    await dispach(fetchConverted(INIT_BASE, INIT_QUOTE));\r\n    dispach(fetchCurrenciesSuccess({ ...response.data }));\r\n  } catch (err) {\r\n    dispach(fetchCurrenciesFailure());\r\n    throw err;\r\n  }\r\n};\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nexport const fetchCurrenciesState = handleActions({\r\n  [actions.fetchCurrenciesRequest]: () => 'requested',\r\n  [actions.fetchCurrenciesFailure]: () => 'failed',\r\n  [actions.fetchCurrenciesSuccess]: () => 'finished',\r\n}, 'none');\r\n\r\nexport const fetchConvertState = handleActions({\r\n  [actions.fetchConvertedRequest]: () => 'requested',\r\n  [actions.fetchConvertedFailure]: () => 'failed',\r\n  [actions.fetchConvertedSuccess]: () => 'finished',\r\n}, 'none');","import { handleActions } from 'redux-actions';\r\nimport { keyBy } from 'lodash';\r\nimport * as actions from '../actions';\r\n\r\nexport const defaultState = { byCode: {}, allCodes: [] };\r\n\r\nexport default handleActions({\r\n  [actions.fetchCurrenciesSuccess]: (state, { payload }) => ({\r\n    ...state,\r\n    byCode: keyBy(payload.currencies, 'code'),\r\n    allCodes: payload.currencies.map((currensy) => currensy.code),\r\n  }),\r\n}, defaultState);","import { handleActions } from 'redux-actions';\r\nimport { floor } from 'lodash';\r\nimport { INIT_BASE, INIT_QUOTE, INIT_AMOUNT } from '../consts';\r\nimport * as actions from '../actions';\r\n\r\nexport const defaultState = {\r\n  mode: 'first',\r\n  base: INIT_BASE,\r\n  quote: INIT_QUOTE,\r\n  firstAmount: INIT_AMOUNT,\r\n  secondAmount: INIT_AMOUNT,\r\n  rate: 1,\r\n};\r\n\r\nexport default handleActions({\r\n  [actions.fetchConvertedSuccess]: (state, { payload }) => {\r\n    const { rate } = payload;\r\n    const { firstAmount, secondAmount, mode } = state;\r\n    const oppositeRate = 1 / rate;\r\n\r\n    const mapping = {\r\n      first: { secondAmount: floor(firstAmount * rate, 2) },\r\n      second: { firstAmount: floor(secondAmount * oppositeRate, 2) },\r\n    };\r\n\r\n    return {\r\n      ...state,\r\n      ...mapping[mode],\r\n      rate,\r\n    };\r\n  },\r\n\r\n  [actions.setBaseCurrency]: (state, { payload }) => {\r\n    const { value: base } = payload;\r\n\r\n    return { ...state, base };\r\n  },\r\n\r\n  [actions.setQuoteCurrency]: (state, { payload }) => {\r\n    const { value: quote } = payload;\r\n\r\n    return { ...state, quote };\r\n  },\r\n\r\n  [actions.setFirstAmount]: (state, { payload }) => {\r\n    const { value: firstAmount } = payload;\r\n    const { rate } = state;\r\n    const secondAmount = floor(firstAmount * rate, 2);\r\n\r\n    return {\r\n      ...state,\r\n      firstAmount,\r\n      secondAmount,\r\n      mode: 'first',\r\n    };\r\n  },\r\n\r\n  [actions.setSecondAmount]: (state, { payload }) => {\r\n    const { value: secondAmount } = payload;\r\n    const { rate } = state;\r\n    const firstAmount = floor(secondAmount * (1 / rate), 2);\r\n\r\n    return {\r\n      ...state,\r\n      firstAmount,\r\n      secondAmount,\r\n      mode: 'second',\r\n    };\r\n  },\r\n\r\n  [actions.switchInputs]: (state) => {\r\n    const { mode, rate } = state;\r\n    const oppositeRate = 1 / rate;\r\n  \r\n    const mapping = {\r\n      first: { secondAmount: floor(state.firstAmount * oppositeRate, 2) },\r\n      second: { firstAmount: floor(state.secondAmount * rate, 2) },\r\n    };\r\n\r\n    return {\r\n      ...state,\r\n      ...mapping[mode],\r\n      base: state.quote,\r\n      quote: state.base,\r\n      rate: oppositeRate,\r\n    };\r\n  },\r\n}, defaultState);","export const INIT_BASE = 'GBP';\r\nexport const INIT_QUOTE = 'RUB';\r\nexport const INIT_AMOUNT = 100;\r\n","import { combineReducers } from 'redux';\r\nimport { fetchCurrenciesState, fetchConvertState } from './feth';\r\nimport currencies from './currencies';\r\nimport convert from './convert';\r\n\r\nexport default combineReducers({\r\n  fetchCurrenciesState,\r\n  fetchConvertState,\r\n  currencies,\r\n  convert,\r\n});","import { createSelector } from 'reselect';\r\n\r\nexport const getCurrencyByCode = (state) => state.currencies.byCode;\r\nexport const getCurrencyCodes = (state) => state.currencies.allCodes;\r\n\r\nexport const currencySelector = createSelector(\r\n  [getCurrencyByCode, getCurrencyCodes],\r\n  (byCode, allCodes) => allCodes.map((code) => byCode[code]),\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport { currencySelector } from '../../selectors';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const currencies = currencySelector(state);\r\n  return { currencies };\r\n};\r\n\r\nclass CurrencyList extends React.Component {\r\n  render() {\r\n    // const { currentCode } = this.state;\r\n    const { value, currencies, onChange } = this.props;\r\n\r\n    return (\r\n      currencies.map((currency) => (\r\n        <Dropdown.Item\r\n          active={currency.code === value}\r\n          onClick={onChange}\r\n          key={currency.code}\r\n          value={currency.code}\r\n          text={currency.name}\r\n          description={currency.code}\r\n          style={{ whiteSpace: 'normal' }}\r\n        />\r\n      ))\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CurrencyList);\r\n","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport CurrencyList from './CurrencyList';\r\n\r\n\r\nexport default class CurrencyDropdown extends React.Component {\r\n  state = {\r\n    currentValue: this.props.value,\r\n  }\r\n\r\n  handleUpdate = (e, { value }) => {\r\n    this.setState({ currentValue: value });\r\n  }\r\n\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n    const { currentValue } = this.state;\r\n\r\n    return (\r\n      <Dropdown\r\n        onOpen={this.handleUpdate}\r\n        button\r\n        scrolling\r\n        text={value}\r\n        value={value}\r\n        style={{ position: 'initial' }}\r\n      >\r\n        <Dropdown.Menu>\r\n          <CurrencyList\r\n            value={currentValue}\r\n            onChange={onChange}\r\n          />\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    )\r\n  }\r\n}\r\n","const mask = (value) => {\r\n  return value\r\n    .replace(/,/g, '.')\r\n    .replace(/^\\./g, '0.')\r\n    .replace(/[^0-9.]|(?<=\\.\\d{2})\\d*|\\.(?=.*\\.)/g, '')\r\n};\r\n\r\nexport default mask;\r\n","import React from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\nimport CurrencyDropdown from './CurrencyDropdown';\r\nimport mask from '../../utils';\r\n\r\nexport default class CurrencyInput extends React.Component {\r\n  handleChange = (event, data) => {\r\n    const { onAmountChange } = this.props;\r\n    const { value } = data;\r\n    const newValue = mask(value);\r\n    onAmountChange(event, { ...data, value: newValue });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onCurrencyChange,\r\n      text,\r\n      amount,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Input\r\n        onChange={this.handleChange}\r\n        value={amount}\r\n        fluid\r\n        maxLength={12}\r\n        placeholder=\"Amount\"\r\n        action={\r\n          <CurrencyDropdown\r\n            onChange={onCurrencyChange}\r\n            value={text}\r\n          />\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CurrencyInput from './CurrencyInput';\r\nimport * as actions from '../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = state.convert;\r\n\r\n  return props;\r\n};\r\n\r\nconst actionsList = {\r\n  fetchConverted: actions.fetchConverted,\r\n  setQuoteCurrency: actions.setQuoteCurrency,\r\n  setSecondAmount: actions.setSecondAmount,\r\n};\r\n\r\nclass CurrencySecond extends React.Component {\r\n  handleChange = (e, { value }) => {\r\n    const { setSecondAmount } = this.props;\r\n    setSecondAmount({ value });\r\n  }\r\n\r\n  handleClick = (e, { value }) => {\r\n    const { setQuoteCurrency, fetchConverted, base } = this.props;\r\n    setQuoteCurrency({ value });\r\n    fetchConverted(base, value);\r\n  }\r\n\r\n  render() {\r\n    const { quote, secondAmount } = this.props;\r\n\r\n    return (\r\n      <CurrencyInput\r\n        text={quote}\r\n        amount={secondAmount}\r\n        onAmountChange={this.handleChange}\r\n        onCurrencyChange={this.handleClick}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionsList)(CurrencySecond);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CurrencyInput from './CurrencyInput';\r\nimport * as actions from '../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = state.convert;\r\n\r\n  return props;\r\n};\r\n\r\nconst actionsList = {\r\n  fetchConverted: actions.fetchConverted,\r\n  setBaseCurrency: actions.setBaseCurrency,\r\n  setFirstAmount: actions.setFirstAmount,\r\n};\r\n\r\nclass CurrencyFirst extends React.Component {\r\n  handleChange = (e, { value }) => {\r\n    const { setFirstAmount } = this.props;\r\n    setFirstAmount({ value });\r\n  }\r\n\r\n  handleClick = (e, { value }) => {\r\n    const { setBaseCurrency, fetchConverted, quote } = this.props;\r\n    setBaseCurrency({ value });\r\n    fetchConverted(value, quote);\r\n  }\r\n\r\n  render() {\r\n    const { base, firstAmount } = this.props;\r\n\r\n    return (\r\n      <CurrencyInput\r\n        text={base}\r\n        amount={firstAmount}\r\n        onAmountChange={this.handleChange}\r\n        onCurrencyChange={this.handleClick}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionsList)(CurrencyFirst);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Divider, Segment, Grid, Icon, Message } from 'semantic-ui-react';\r\nimport CurrencySecond from './CurrencySecond';\r\nimport CurrencyFirst from './CurrencyFirst';\r\nimport * as actions from '../actions';\r\n\r\nconst mapStateToProps = ({ fetchCurrenciesState }) => ({\r\n  fetchCurrenciesState\r\n});\r\n\r\nconst actionsList = {\r\n  switchInputs: actions.switchInputs,\r\n}\r\n\r\nclass ConvertWidget extends React.Component {\r\n  handleClick = () => {\r\n    const { switchInputs } = this.props;\r\n    switchInputs();\r\n  }\r\n\r\n  renderErrMsg() {\r\n    return (\r\n      <Message negative>\r\n        <Message.Header>\r\n          Sorry!\r\n        </Message.Header>\r\n        <p>Service is not available now, please try again later.</p>\r\n      </Message>\r\n    );\r\n  }\r\n\r\n  renderWidget() {\r\n    const { fetchCurrenciesState } = this.props;\r\n    const isFetching = fetchCurrenciesState === 'requested';\r\n\r\n    return (\r\n      <Segment loading={isFetching}>\r\n        <Grid columns=\"equal\" stackable>\r\n          <Grid.Column>\r\n            <CurrencyFirst />\r\n          </Grid.Column>\r\n          <Grid.Column width=\"one\">\r\n            <Divider vertical>\r\n              <Icon\r\n                onClick={this.handleClick}\r\n                link\r\n                name=\"refresh\"\r\n              />\r\n            </Divider>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <CurrencySecond />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { fetchCurrenciesState } = this.props;\r\n    const isFailed = fetchCurrenciesState === 'failed';\r\n\r\n    return isFailed\r\n      ? this.renderErrMsg()\r\n      : this.renderWidget();\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, actionsList)(ConvertWidget);\r\n","import React from 'react';\r\nimport { Grid, Header, Container, Icon } from 'semantic-ui-react';\r\nimport ConvertWidget from './ConvertWidget';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Grid style={{ height: \"80vh\" }} textAlign=\"center\" verticalAlign=\"middle\">\r\n          <Grid.Column>\r\n              <Header as=\"h2\" color=\"teal\">\r\n                <Icon name=\"money bill alternate outline\" /> Currency Converter\r\n              </Header>\r\n            <ConvertWidget />\r\n            <p>2019 Currency converter widget</p>\r\n            <Icon name=\"github\" />\r\n            <a href=\"https://github.com/wildneo/curr-convert\"> Source Code</a>\r\n\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\nimport { fetchCurrencies } from './actions';\r\nimport App from './components/App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './index.css';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n  ),\r\n);\r\n\r\nstore.dispatch(fetchCurrencies());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}