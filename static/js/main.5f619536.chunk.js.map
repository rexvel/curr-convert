{"version":3,"sources":["routes.js","actions/index.js","reducers/feth.js","reducers/currencies.js","reducers/convert.js","consts.js","reducers/search.js","reducers/index.js","components/Dropdown/List.jsx","components/Dropdown/Search.jsx","components/Dropdown/index.jsx","utils/index.js","selectors/index.js","components/CurrencyInput.jsx","components/CurrencySecond.jsx","components/CurrencyFirst.jsx","components/ConvertWidget.jsx","components/App.jsx","index.js"],"names":["host","process","authorization","baseURL","method","url","headers","from","to","amount","join","fetchCurrenciesRequest","createAction","fetchCurrenciesSuccess","fetchCurrenciesFailure","fetchConvertedRequest","fetchConvertedSuccess","fetchConvertedFailure","setBaseCurrency","setQuoteCurrency","setFirstAmount","setSecondAmount","switchInputs","setSearchQuery","clearSearchQuery","fetchConverted","dispach","a","async","convertUrl","routes","axios","request","rate","data","fetchCurrenciesState","handleActions","actions","fetchConvertState","state","payload","byCode","keyBy","currencies","allCodes","map","currensy","code","defaultState","mode","base","quote","firstAmount","secondAmount","oppositeRate","mapping","first","floor","second","value","searchQuery","combineReducers","convert","search","List","handleChange","event","invoke","props","this","Menu","scrolling","currency","Item","onClick","active","key","text","name","description","style","whiteSpace","React","Component","SearchInput","handleClick","stopPropagation","Input","onChange","icon","iconPosition","className","Dropdown","handleClose","children","onClose","button","position","Search","mask","replace","getSearchQuery","currencySelector","createSelector","filteredCurrencySelector","query","exp","RegExp","escapeRegExp","filter","test","searchFilter","actionsList","CurrencyInput","handleAmoumtChange","newValue","handleCurrencyChange","handleSearchChange","e","handleSearchClear","activeCode","maxLength","placeholder","fluid","action","connect","CurrencySecond","onAmountChange","onCurrencyChange","CurrencyFirst","ConvertWidget","Message","negative","Header","isFetching","Segment","loading","Grid","columns","stackable","Column","width","Divider","vertical","Icon","link","renderErrMsg","renderWidget","App","Container","height","textAlign","verticalAlign","as","color","href","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","dispatch","listUrl","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f619536.chunk.js","sourcesContent":["const host = process.env.REACT_APP_HOST;\r\nconst key = process.env.REACT_APP_API_KEY;\r\nconst authorization = `Bearer ${key}`;\r\n\r\n\r\nexport default {\r\n  listUrl: () => ({\r\n    baseURL: host,\r\n    method: 'get',\r\n    url: 'list',\r\n    headers: {\r\n      authorization,\r\n    },\r\n  }),\r\n  ratesUrl: (params) => ({\r\n    baseURL: host,\r\n    method: 'get',\r\n    url: 'rates',\r\n    headers: {\r\n      authorization,\r\n    },\r\n    params,\r\n  }),\r\n  convertUrl: (from, to, amount = 1) => ({\r\n    baseURL: host,\r\n    method: 'get',\r\n    url: ['convert', amount, from, to].join('/'),\r\n    headers: {\r\n      authorization,\r\n    },\r\n  }),\r\n};\r\n","import axios from 'axios';\r\nimport { createAction } from 'redux-actions';\r\nimport { INIT_BASE, INIT_QUOTE } from '../consts';\r\nimport routes from '../routes';\r\n\r\nexport const fetchCurrenciesRequest = createAction('FETCH_CURRENCIES_REQUEST');\r\nexport const fetchCurrenciesSuccess = createAction('FETCH_CURRENCIES_SUCCESS');\r\nexport const fetchCurrenciesFailure = createAction('FETCH_CURRENCIES_FAILURE');\r\n\r\nexport const fetchConvertedRequest = createAction('FETCH_CONVERTED_REQUEST');\r\nexport const fetchConvertedSuccess = createAction('FETCH_CONVERTED_SUCCESS');\r\nexport const fetchConvertedFailure = createAction('FETCH_CONVERTED_FAILURE');\r\n\r\nexport const setBaseCurrency = createAction('SET_BASE_CURRENCY');\r\nexport const setQuoteCurrency = createAction('SET_QUOTE_CURRENCY');\r\n\r\nexport const setFirstAmount = createAction('SET_FIRST_AMOUNT');\r\nexport const setSecondAmount = createAction('SET_SECOND_AMOUNT');\r\n\r\nexport const switchInputs = createAction('SWITCH_INPUTS');\r\n\r\nexport const setSearchQuery = createAction('SET_SEARCH_QUERY');\r\nexport const clearSearchQuery = createAction('CLEAR_SEARCH_QUERY');\r\n\r\nexport const fetchConverted = (from, to) => async (dispach) => {\r\n  dispach(fetchConvertedRequest());\r\n  try {\r\n    const convertUrl = routes.convertUrl(from, to);\r\n    const { data: { amount: rate } } = await axios.request(convertUrl);\r\n    // TODO:\r\n    // Как оказалось, сервер может ответить значением amount: 0.\r\n    // Стоит добавить проверку на ноль и наверное, кидать исключение,\r\n    // пока не придкмал как с этим быть.\r\n    dispach(fetchConvertedSuccess({ rate }));\r\n  } catch (err) {\r\n    dispach(fetchConvertedFailure());\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const fetchCurrencies = () => async (dispach) => {\r\n  dispach(fetchCurrenciesRequest());\r\n  try {\r\n    const listUrl = routes.listUrl();\r\n    const response = await axios.request(listUrl);\r\n    await dispach(fetchConverted(INIT_BASE, INIT_QUOTE));\r\n    dispach(fetchCurrenciesSuccess({ ...response.data }));\r\n  } catch (err) {\r\n    dispach(fetchCurrenciesFailure());\r\n    throw err;\r\n  }\r\n};\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nexport const fetchCurrenciesState = handleActions({\r\n  [actions.fetchCurrenciesRequest]: () => 'requested',\r\n  [actions.fetchCurrenciesFailure]: () => 'failed',\r\n  [actions.fetchCurrenciesSuccess]: () => 'finished',\r\n}, 'none');\r\n\r\nexport const fetchConvertState = handleActions({\r\n  [actions.fetchConvertedRequest]: () => 'requested',\r\n  [actions.fetchConvertedFailure]: () => 'failed',\r\n  [actions.fetchConvertedSuccess]: () => 'finished',\r\n}, 'none');","import { handleActions } from 'redux-actions';\r\nimport { keyBy } from 'lodash';\r\nimport * as actions from '../actions';\r\n\r\nexport const defaultState = { byCode: {}, allCodes: [] };\r\n\r\nexport default handleActions({\r\n  [actions.fetchCurrenciesSuccess]: (state, { payload }) => ({\r\n    ...state,\r\n    byCode: keyBy(payload.currencies, 'code'),\r\n    allCodes: payload.currencies.map((currensy) => currensy.code),\r\n  }),\r\n}, defaultState);","import { handleActions } from 'redux-actions';\r\nimport { floor } from 'lodash';\r\nimport { INIT_BASE, INIT_QUOTE, INIT_AMOUNT } from '../consts';\r\nimport * as actions from '../actions';\r\n\r\nexport const defaultState = {\r\n  mode: 'first',\r\n  base: INIT_BASE,\r\n  quote: INIT_QUOTE,\r\n  firstAmount: INIT_AMOUNT,\r\n  secondAmount: INIT_AMOUNT,\r\n  rate: 1,\r\n};\r\n\r\nexport default handleActions({\r\n  [actions.fetchConvertedSuccess]: (state, { payload }) => {\r\n    const { rate } = payload;\r\n    const { firstAmount, secondAmount, mode } = state;\r\n    const oppositeRate = 1 / rate;\r\n\r\n    const mapping = {\r\n      first: { secondAmount: floor(firstAmount * rate, 2) },\r\n      second: { firstAmount: floor(secondAmount * oppositeRate, 2) },\r\n    };\r\n\r\n    return {\r\n      ...state,\r\n      ...mapping[mode],\r\n      rate,\r\n    };\r\n  },\r\n\r\n  [actions.setBaseCurrency]: (state, { payload }) => {\r\n    const { value: base } = payload;\r\n\r\n    return { ...state, base };\r\n  },\r\n\r\n  [actions.setQuoteCurrency]: (state, { payload }) => {\r\n    const { value: quote } = payload;\r\n\r\n    return { ...state, quote };\r\n  },\r\n\r\n  [actions.setFirstAmount]: (state, { payload }) => {\r\n    const { value: firstAmount } = payload;\r\n    const { rate } = state;\r\n    const secondAmount = floor(firstAmount * rate, 2);\r\n\r\n    return {\r\n      ...state,\r\n      firstAmount,\r\n      secondAmount,\r\n      mode: 'first',\r\n    };\r\n  },\r\n\r\n  [actions.setSecondAmount]: (state, { payload }) => {\r\n    const { value: secondAmount } = payload;\r\n    const { rate } = state;\r\n    const firstAmount = floor(secondAmount * (1 / rate), 2);\r\n\r\n    return {\r\n      ...state,\r\n      firstAmount,\r\n      secondAmount,\r\n      mode: 'second',\r\n    };\r\n  },\r\n\r\n  [actions.switchInputs]: (state) => {\r\n    const { mode, rate } = state;\r\n    const oppositeRate = 1 / rate;\r\n  \r\n    const mapping = {\r\n      first: { secondAmount: floor(state.firstAmount * oppositeRate, 2) },\r\n      second: { firstAmount: floor(state.secondAmount * rate, 2) },\r\n    };\r\n\r\n    return {\r\n      ...state,\r\n      ...mapping[mode],\r\n      base: state.quote,\r\n      quote: state.base,\r\n      rate: oppositeRate,\r\n    };\r\n  },\r\n}, defaultState);","export const INIT_BASE = 'GBP';\r\nexport const INIT_QUOTE = 'RUB';\r\nexport const INIT_AMOUNT = 100;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nexport const defaultState = { searchQuery: '' };\r\n\r\nexport default handleActions({\r\n  [actions.setSearchQuery]: (state, { payload: { value } }) => ({\r\n    ...state,\r\n    searchQuery: value,\r\n  }),\r\n\r\n  [actions.clearSearchQuery]: () => defaultState,\r\n}, defaultState);","import { combineReducers } from 'redux';\r\nimport { fetchCurrenciesState, fetchConvertState } from './feth';\r\nimport currencies from './currencies';\r\nimport convert from './convert';\r\nimport search from './search';\r\n\r\nexport default combineReducers({\r\n  fetchCurrenciesState,\r\n  fetchConvertState,\r\n  currencies,\r\n  convert,\r\n  search,\r\n});","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { invoke } from 'lodash';\r\nimport { Dropdown as DropdownUI } from 'semantic-ui-react';\r\n\r\nexport default class List extends React.Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    currencies: PropTypes.array,\r\n    value: PropTypes.string,\r\n  };\r\n\r\n  handleChange = (event, { value }) => {\r\n    invoke(this.props, 'onChange', event, { value });\r\n  }\r\n\r\n  render() {\r\n    const { value, currencies } = this.props;\r\n\r\n    return (\r\n      <DropdownUI.Menu scrolling>\r\n        {currencies.map((currency) => (\r\n          <DropdownUI.Item\r\n            onClick={this.handleChange}\r\n            active={currency.code === value}\r\n            key={currency.code}\r\n            value={currency.code}\r\n            text={currency.name}\r\n            description={currency.code}\r\n            style={{ whiteSpace: 'normal' }}\r\n          />\r\n        ))}\r\n      </DropdownUI.Menu>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { invoke } from 'lodash';\r\nimport { Input } from 'semantic-ui-react';\r\n\r\nexport default class SearchInput extends React.Component {\r\n  static propTypes = {\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n    currencies: PropTypes.array,\r\n    onChange: PropTypes.func,\r\n    onClick: PropTypes.func,\r\n  };\r\n\r\n  handleClick = (event) => {\r\n    event.stopPropagation();\r\n    invoke(this.props, 'onClick', event, this.props);\r\n  }\r\n\r\n  handleChange = (event, { value }) => {\r\n    invoke(this.props, 'onChange', event, { value });\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n\r\n    return (\r\n      <Input\r\n        onClick={this.handleClick}\r\n        onChange={this.handleChange}\r\n        value={value}\r\n        icon='search'\r\n        iconPosition='left'\r\n        className='search'\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { invoke } from 'lodash';\r\nimport { Dropdown as DropdownUI } from 'semantic-ui-react';\r\nimport List from './List';\r\nimport Search from './Search';\r\n\r\n\r\n\r\nclass Dropdown extends React.Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node,\r\n    ])\r\n  };\r\n\r\n  handleClose = (event, data) => {\r\n    invoke(this.props, 'onClose', event, data);\r\n  }\r\n\r\n  render() {\r\n    const { children, value } = this.props;\r\n\r\n    return (\r\n      <DropdownUI\r\n        onClose={this.handleClose}\r\n        value={value}\r\n        text={value}\r\n        button\r\n        style={{ position: 'initial' }}\r\n      >\r\n      <DropdownUI.Menu>\r\n        {children}\r\n      </DropdownUI.Menu>\r\n      </DropdownUI>\r\n    )\r\n  }\r\n}\r\n\r\nDropdown.List = List;\r\nDropdown.Search = Search;\r\n\r\nexport default Dropdown;\r\n","import { escapeRegExp } from 'lodash';\r\n\r\nexport const mask = (value) => {\r\n  return value\r\n    .replace(/,/g, '.')\r\n    .replace(/^\\./g, '0.')\r\n    .replace(/[^0-9.]|(?<=\\.\\d{2})\\d*|\\.(?=.*\\.)/g, '')\r\n};\r\n\r\nexport const searchFilter = (currencies, query) => {\r\n  const exp = new RegExp(escapeRegExp(query), 'i');\r\n  const predicate = currency => (\r\n    exp.test(currency.code) || exp.test(currency.name)\r\n  );\r\n\r\n  return currencies.filter(predicate);\r\n};\r\n","import { createSelector } from 'reselect';\r\nimport { searchFilter } from '../utils';\r\n\r\nexport const getCurrencyByCode = (state) => state.currencies.byCode;\r\nexport const getCurrencyCodes = (state) => state.currencies.allCodes;\r\nexport const getSearchQuery = (state) => state.search.searchQuery;\r\n\r\nexport const currencySelector = createSelector(\r\n  [getCurrencyByCode, getCurrencyCodes],\r\n  (byCode, allCodes) => allCodes.map((code) => byCode[code]),\r\n);\r\n\r\nexport const filteredCurrencySelector = createSelector(\r\n  [currencySelector, getSearchQuery],\r\n  (currencies, searchQuery) => (\r\n    searchQuery\r\n      ? searchFilter(currencies, searchQuery)\r\n      : currencies\r\n  ),\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { invoke } from 'lodash';\r\nimport { Input } from 'semantic-ui-react';\r\nimport Dropdown from './Dropdown';\r\nimport { getSearchQuery, filteredCurrencySelector } from '../selectors';\r\nimport * as actions from '../actions';\r\nimport { mask } from '../utils';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const searchQuery = getSearchQuery(state);\r\n  const currencies = filteredCurrencySelector(state);\r\n  return { searchQuery, currencies };\r\n};\r\nconst actionsList = {\r\n  setSearchQuery: actions.setSearchQuery,\r\n  clearSearchQuery: actions.clearSearchQuery,\r\n};\r\n\r\nclass CurrencyInput extends React.Component {\r\n  static propTypes = {\r\n    onCurrencyChange: PropTypes.func,\r\n    onAmountChange: PropTypes.func,\r\n    activeCode: PropTypes.string,\r\n    amount: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n  };\r\n\r\n  handleAmoumtChange = (event, data) => {\r\n    const { value } = data;\r\n    const newValue = mask(value);\r\n    invoke(this.props, 'onAmountChange', event, { value: newValue });\r\n  }\r\n\r\n  handleCurrencyChange = (event, data) => {\r\n    invoke(this.props, 'onCurrencyChange', event, data);\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    const { setSearchQuery } = this.props;\r\n    setSearchQuery({ value });\r\n  }\r\n\r\n  handleSearchClear = () => {\r\n    const { clearSearchQuery } = this.props;\r\n    clearSearchQuery();\r\n  }\r\n\r\n  render() {\r\n    const { searchQuery, currencies, activeCode, amount } = this.props;\r\n\r\n    return (\r\n      <Input\r\n        onChange={this.handleAmoumtChange}\r\n        value={amount}\r\n        maxLength={12}\r\n        placeholder=\"Amount\"\r\n        fluid\r\n        action={\r\n          <Dropdown\r\n            onClose={this.handleSearchClear}\r\n            value={activeCode}\r\n          >\r\n            <Dropdown.Search\r\n              onChange={this.handleSearchChange}\r\n              value={searchQuery}\r\n            />\r\n            <Dropdown.List\r\n              onChange={this.handleCurrencyChange}\r\n              currencies={currencies}\r\n              value={activeCode}\r\n            />\r\n          </Dropdown>\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionsList)(CurrencyInput);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CurrencyInput from './CurrencyInput';\r\nimport * as actions from '../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = state.convert;\r\n\r\n  return props;\r\n};\r\n\r\nconst actionsList = {\r\n  fetchConverted: actions.fetchConverted,\r\n  setQuoteCurrency: actions.setQuoteCurrency,\r\n  setSecondAmount: actions.setSecondAmount,\r\n};\r\n\r\nclass CurrencySecond extends React.Component {\r\n  handleChange = (e, { value }) => {\r\n    const { setSecondAmount } = this.props;\r\n    setSecondAmount({ value });\r\n  }\r\n\r\n  handleClick = (e, { value }) => {\r\n    const { setQuoteCurrency, fetchConverted, base } = this.props;\r\n    setQuoteCurrency({ value });\r\n    fetchConverted(base, value);\r\n  }\r\n\r\n  render() {\r\n    const { quote, secondAmount } = this.props;\r\n\r\n    return (\r\n      <CurrencyInput\r\n        activeCode={quote}\r\n        amount={secondAmount}\r\n        onAmountChange={this.handleChange}\r\n        onCurrencyChange={this.handleClick}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionsList)(CurrencySecond);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CurrencyInput from './CurrencyInput';\r\nimport * as actions from '../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = state.convert;\r\n\r\n  return props;\r\n};\r\n\r\nconst actionsList = {\r\n  fetchConverted: actions.fetchConverted,\r\n  setBaseCurrency: actions.setBaseCurrency,\r\n  setFirstAmount: actions.setFirstAmount,\r\n};\r\n\r\nclass CurrencyFirst extends React.Component {\r\n  handleChange = (e, { value }) => {\r\n    const { setFirstAmount } = this.props;\r\n    setFirstAmount({ value });\r\n  }\r\n\r\n  handleClick = (e, { value }) => {\r\n    const { setBaseCurrency, fetchConverted, quote } = this.props;\r\n    setBaseCurrency({ value });\r\n    fetchConverted(value, quote);\r\n  }\r\n\r\n  render() {\r\n    const { base, firstAmount } = this.props;\r\n\r\n    return (\r\n      <CurrencyInput\r\n        activeCode={base}\r\n        amount={firstAmount}\r\n        onAmountChange={this.handleChange}\r\n        onCurrencyChange={this.handleClick}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionsList)(CurrencyFirst);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Divider, Segment, Grid, Icon, Message } from 'semantic-ui-react';\r\nimport CurrencySecond from './CurrencySecond';\r\nimport CurrencyFirst from './CurrencyFirst';\r\nimport * as actions from '../actions';\r\n\r\nconst mapStateToProps = ({ fetchCurrenciesState }) => ({\r\n  fetchCurrenciesState\r\n});\r\n\r\nconst actionsList = {\r\n  switchInputs: actions.switchInputs,\r\n}\r\n\r\nclass ConvertWidget extends React.Component {\r\n  handleClick = () => {\r\n    const { switchInputs } = this.props;\r\n    switchInputs();\r\n  }\r\n\r\n  renderErrMsg() {\r\n    return (\r\n      <Message negative>\r\n        <Message.Header>\r\n          Sorry!\r\n        </Message.Header>\r\n        <p>Service is not available now, please try again later.</p>\r\n      </Message>\r\n    );\r\n  }\r\n\r\n  renderWidget() {\r\n    const { fetchCurrenciesState } = this.props;\r\n    const isFetching = fetchCurrenciesState === 'requested';\r\n\r\n    return (\r\n      <Segment loading={isFetching}>\r\n        <Grid columns=\"equal\" stackable>\r\n          <Grid.Column>\r\n            <CurrencyFirst />\r\n          </Grid.Column>\r\n          <Grid.Column width=\"one\">\r\n            <Divider vertical>\r\n              <Icon\r\n                onClick={this.handleClick}\r\n                link\r\n                name=\"refresh\"\r\n              />\r\n            </Divider>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <CurrencySecond />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { fetchCurrenciesState } = this.props;\r\n    const isFailed = fetchCurrenciesState === 'failed';\r\n\r\n    return isFailed\r\n      ? this.renderErrMsg()\r\n      : this.renderWidget();\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, actionsList)(ConvertWidget);\r\n","import React from 'react';\r\nimport { Grid, Header, Container, Icon } from 'semantic-ui-react';\r\nimport ConvertWidget from './ConvertWidget';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Grid style={{ height: \"80vh\" }} textAlign=\"center\" verticalAlign=\"middle\">\r\n          <Grid.Column>\r\n              <Header as=\"h2\" color=\"teal\">\r\n                <Icon name=\"money bill alternate outline\" /> Currency Converter\r\n              </Header>\r\n            <ConvertWidget />\r\n            <p>2019 Currency converter widget</p>\r\n            <Icon name=\"github\" />\r\n            <a href=\"https://github.com/wildneo/curr-convert\"> Source Code</a>\r\n\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\nimport { fetchCurrencies } from './actions';\r\nimport App from './components/App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './index.css';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n  ),\r\n);\r\n\r\nstore.dispatch(fetchCurrencies());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}